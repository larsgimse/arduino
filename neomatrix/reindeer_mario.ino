/* Arduino 256 RGB LEDs Matrix Animation Frame 
 * Using WS2812 LED Strips
 
First created by Yvan / https://Brainy-Bits.com
Reindeer and Marip by me

This code is in the public domain...

You can: copy it, use it, modify it, share it or just plain ignore it!
Thx!

*/

#include <avr/pgmspace.h>  // Needed to store stuff in Flash using PROGMEM
#include "FastLED.h"       // Fastled library to control the LEDs
#include <stdint.h>

// How many leds are connected?
#define NUM_LEDS 256

// Define the Data Pin
#define DATA_PIN 3  // Connected to the data pin of the first LED strip

// Define the array of leds
CRGB leds[NUM_LEDS];

const long reindeer1[] PROGMEM =
{

0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 
0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0xacaba9, 0x000000, 0x000000, 0x000000, 0x000000, 0xacaba9, 0x000000, 0x000000, 0x000000, 
0x000000, 0x000000, 0xacaba9, 0x000000, 0x000000, 0x000000, 0x000000, 0xacaba9, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 
0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0xacaba9, 0x000000, 0xacaba9, 0x000000, 0x000000, 0xacaba9, 0x000000, 0x000000, 0x000000, 
0x000000, 0x000000, 0x000000, 0x000000, 0xff7c00, 0xff7c00, 0xacaba9, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000,
0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0xff7c00, 0xff7c00, 0xacaba9, 0xff7c00, 0xacaba9, 0x000000, 0x000000, 
0x000000, 0x000000, 0xff7c00, 0xff7c00, 0xff7c00, 0xff7c00, 0xff7c00, 0xff7c00, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0xff7c00, 0x000000, 0x000000, 
0x000000, 0x000000, 0xff7c00, 0xff7c00, 0xff7c00, 0xff7c00, 0xff7c00, 0xff7c00, 0xff7c00, 0xff7c00, 0xff7c00, 0xff7c00, 0xff7c00, 0x000000, 0x000000, 0x000000, 
0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0xff7c00, 0xff7c00, 0xff7c00, 0xff7c00, 0xff7c00, 0xff7c00, 0xff7c00, 0xff7c00, 0x000000, 0x000000, 0x000000, 
0x000000, 0x000000, 0x000000, 0xff7c00, 0xff7c00, 0xff7c00, 0xff7c00, 0xff7c00, 0xff7c00, 0xff7c00, 0xff7c00, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 
0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0xff7c00, 0xff7c00, 0xff7c00, 0xff7c00, 0xff7c00, 0xff7c00, 0xff7c00, 0xff7c00, 0xff7c00, 0x000000, 0x000000, 
0x000000, 0x000000, 0xff7c00, 0x000000, 0xff7c00, 0x000000, 0x000000, 0x000000, 0xff7c00, 0x000000, 0xff7c00, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 
0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0xff7c00, 0x000000, 0xff7c00, 0x000000, 0x000000, 0x000000, 0xff7c00, 0x000000, 0xff7c00, 0x000000, 0x000000, 
0x000000, 0x000000, 0xff7c00, 0x000000, 0xff7c00, 0x000000, 0x000000, 0x000000, 0xff7c00, 0x000000, 0xff7c00, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 
0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0xacaba9, 0x000000, 0xacaba9, 0x000000, 0x000000, 0x000000, 0xacaba9, 0x000000, 0xacaba9, 0x000000, 0x000000, 
0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000
};


const long reindeer2[] PROGMEM =
{
0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 
0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0xacaba9, 0x000000, 0x000000, 0x000000, 0x000000, 0xacaba9, 0x000000, 0x000000, 0x000000, 
0x000000, 0x000000, 0xacaba9, 0x000000, 0x000000, 0x000000, 0x000000, 0xacaba9, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 
0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0xacaba9, 0x000000, 0xacaba9, 0x000000, 0x000000, 0xacaba9, 0x000000, 0x000000, 0x000000, 
0x000000, 0x000000, 0x000000, 0x000000, 0xff7c00, 0xff7c00, 0xacaba9, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 
0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0xff7c00, 0xacaba9, 0xff7c00, 0xacaba9, 0x000000, 0x000000, 0x000000, 
0x000000, 0x000000, 0xf40404, 0xff7c00, 0xff7c00, 0xff7c00, 0xff7c00, 0xff7c00, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0xff7c00, 0x000000, 0x000000, 
0x000000, 0x000000, 0xff7c00, 0xff7c00, 0xff7c00, 0xff7c00, 0xff7c00, 0xff7c00, 0xff7c00, 0xff7c00, 0xff7c00, 0xff7c00, 0xff7c00, 0x000000, 0x000000, 0x000000, 
0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0xff7c00, 0xff7c00, 0xff7c00, 0xff7c00, 0xff7c00, 0xff7c00, 0xff7c00, 0xff7c00, 0x000000, 0x000000, 0x000000, 
0x000000, 0x000000, 0x000000, 0xff7c00, 0xff7c00, 0xff7c00, 0xff7c00, 0xff7c00, 0xff7c00, 0xff7c00, 0xff7c00, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 
0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0xff7c00, 0xff7c00, 0xff7c00, 0xff7c00, 0xff7c00, 0xff7c00, 0xff7c00, 0xff7c00, 0x000000, 0x000000, 0x000000, 
0x000000, 0x000000, 0x000000, 0xff7c00, 0xff7c00, 0x000000, 0x000000, 0x000000, 0xff7c00, 0x000000, 0xff7c00, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 
0x000000, 0x000000, 0x000000, 0x000000, 0xff7c00, 0x000000, 0x000000, 0xff7c00, 0x000000, 0x000000, 0xff7c00, 0x000000, 0xff7c00, 0x000000, 0x000000, 0x000000, 
0x000000, 0x000000, 0x000000, 0xff7c00, 0x000000, 0xff7c00, 0x000000, 0x000000, 0xff7c00, 0x000000, 0x000000, 0xff7c00, 0x000000, 0x000000, 0x000000, 0x000000, 
0x000000, 0x000000, 0x000000, 0x000000, 0xacaba9, 0x000000, 0x000000, 0xacaba9, 0x000000, 0x000000, 0xacaba9, 0x000000, 0xacaba9, 0x000000, 0x000000, 0x000000, 
0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000
};

const long mario1[] PROGMEM =
{
0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0xf70505, 0xf70505, 0xf70505, 0xf70505, 0xf70505, 0xf70505, 0xf70505, 0x000000, 0x000000, 0x000000, 0x000000, 
0x000000, 0x000000, 0x000000, 0xf70505, 0xf70505, 0xf70505, 0xf70505, 0xf70505, 0xf70505, 0xf70505, 0xf70505, 0xf70505, 0xf70505, 0xf70505, 0x000000, 0x000000, 
0x000000, 0x000000, 0x000000, 0x000000, 0xec9f07, 0x3e3c3c, 0xec9f07, 0xec9f07, 0xec9f07, 0xec9f07, 0x98620a, 0x98620a, 0x98620a, 0x000000, 0x000000, 0x000000, 
0x000000, 0x000000, 0x98620a, 0xec9f07, 0x98620a, 0xec9f07, 0xec9f07, 0xec9f07, 0xec9f07, 0xec9f07, 0x3e3c3c, 0xec9f07, 0xec9f07, 0x000000, 0x000000, 0x000000, 
0x000000, 0xec9f07, 0xec9f07, 0xec9f07, 0x3e3c3c, 0xec9f07, 0xec9f07, 0xec9f07, 0xec9f07, 0xec9f07, 0x98620a, 0x98620a, 0xec9f07, 0x98620a, 0x000000, 0x000000, 
0x000000, 0x000000, 0x98620a, 0x98620a, 0xec9f07, 0xec9f07, 0xec9f07, 0xec9f07, 0xec9f07, 0xec9f07, 0x3e3c3c, 0x3e3c3c, 0x3e3c3c, 0x3e3c3c, 0x000000, 0x000000, 
0x000000, 0x000000, 0x000000, 0xec9f07, 0xec9f07, 0xec9f07, 0xec9f07, 0xec9f07, 0xec9f07, 0xec9f07, 0xec9f07, 0xec9f07, 0x000000, 0x000000, 0x000000, 0x000000, 
0x000000, 0x000000, 0x000000, 0x000000, 0xf70505, 0xf70505, 0x0537f7, 0xf70505, 0xf70505, 0xf70505, 0xf70505, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 
0x000000, 0x000000, 0x000000, 0xf70505, 0xf70505, 0xf70505, 0x0537f7, 0xf70505, 0xf70505, 0x0537f7, 0xf70505, 0xf70505, 0xf70505, 0x000000, 0x000000, 0x000000, 
0x000000, 0x000000, 0xf70505, 0xf70505, 0xf70505, 0xf70505, 0x0537f7, 0x0537f7, 0x0537f7, 0x0537f7, 0xf70505, 0xf70505, 0xf70505, 0xf70505, 0x000000, 0x000000, 
0x000000, 0x000000, 0xec9f07, 0xec9f07, 0xf70505, 0x0537f7, 0xf7f005, 0x0537f7, 0x0537f7, 0xf7f005, 0x0537f7, 0xf70505, 0xec9f07, 0xec9f07, 0x000000, 0x000000, 
0x000000, 0x000000, 0xec9f07, 0xec9f07, 0xec9f07, 0x0537f7, 0x0537f7, 0x0537f7, 0x0537f7, 0x0537f7, 0x0537f7, 0xec9f07, 0xec9f07, 0xec9f07, 0x000000, 0x000000, 
0x000000, 0x000000, 0xec9f07, 0xec9f07, 0x0537f7, 0x0537f7, 0x0537f7, 0x0537f7, 0x0537f7, 0x0537f7, 0x0537f7, 0x0537f7, 0xec9f07, 0xec9f07, 0x000000, 0x000000, 
0x000000, 0x000000, 0x000000, 0x000000, 0x0537f7, 0x0537f7, 0x0537f7, 0x000000, 0x000000, 0x0537f7, 0x0537f7, 0x0537f7, 0x000000, 0x000000, 0x000000, 0x000000, 
0x000000, 0x000000, 0x000000, 0x98620a, 0x98620a, 0x98620a, 0x000000, 0x000000, 0x000000, 0x000000, 0x98620a, 0x98620a, 0x98620a, 0x000000, 0x000000, 0x000000, 
0x000000, 0x000000, 0x98620a, 0x98620a, 0x98620a, 0x98620a, 0x000000, 0x000000, 0x000000, 0x000000, 0x98620a, 0x98620a, 0x98620a, 0x98620a, 0x000000, 0x000000


};

const long mario2[] PROGMEM =
{

0xec9f07, 0xec9f07, 0xec9f07, 0x000000, 0x000000, 0xf70505, 0xf70505, 0xf70505, 0xf70505, 0xf70505, 0xf70505, 0xf70505, 0x000000, 0x000000, 0x000000, 0x000000, 
0x000000, 0x000000, 0x000000, 0xf70505, 0xf70505, 0xf70505, 0xf70505, 0xf70505, 0xf70505, 0xf70505, 0xf70505, 0xf70505, 0xf70505, 0xf70505, 0xec9f07, 0xec9f07, 
0xf70505, 0xf70505, 0xf70505, 0x000000, 0xec9f07, 0x3e3c3c, 0xec9f07, 0xec9f07, 0xec9f07, 0xec9f07, 0x98620a, 0x98620a, 0x98620a, 0x000000, 0x000000, 0x000000, 
0x000000, 0x000000, 0x98620a, 0xec9f07, 0x98620a, 0xec9f07, 0xec9f07, 0xec9f07, 0xec9f07, 0xec9f07, 0x3e3c3c, 0xec9f07, 0xec9f07, 0xec9f07, 0xf70505, 0xf70505, 
0xf70505, 0xec9f07, 0xec9f07, 0xec9f07, 0x3e3c3c, 0xec9f07, 0xec9f07, 0xec9f07, 0xec9f07, 0xec9f07, 0x98620a, 0x98620a, 0xec9f07, 0x98620a, 0x000000, 0x000000, 
0x000000, 0x000000, 0x98620a, 0x98620a, 0xec9f07, 0xec9f07, 0xec9f07, 0xec9f07, 0xec9f07, 0xec9f07, 0x3e3c3c, 0x3e3c3c, 0x3e3c3c, 0x3e3c3c, 0xf70505, 0x000000, 
0x000000, 0xf70505, 0xf70505, 0xec9f07, 0xec9f07, 0xec9f07, 0xec9f07, 0xec9f07, 0xec9f07, 0xec9f07, 0xec9f07, 0xec9f07, 0x000000, 0x000000, 0x000000, 0x000000, 
0xec9f07, 0xec9f07, 0xec9f07, 0xf70505, 0xf70505, 0xf70505, 0xf70505, 0x0537f7, 0xf70505, 0xf70505, 0xf70505, 0x0537f7, 0xf70505, 0xf70505, 0x000000, 0x000000, 
0x98620a, 0x000000, 0x000000, 0x0537f7, 0xf70505, 0xf70505, 0xf70505, 0x0537f7, 0xf70505, 0xf70505, 0xf70505, 0xf70505, 0xf70505, 0xec9f07, 0xec9f07, 0xec9f07, 
0x000000, 0xec9f07, 0x000000, 0x000000, 0x000000, 0xf70505, 0xf70505, 0xf70505, 0x0537f7, 0x0537f7, 0x0537f7, 0x0537f7, 0xf7f005, 0x0537f7, 0x98620a, 0x98620a, 
0x98620a, 0x98620a, 0x0537f7, 0x0537f7, 0x0537f7, 0x0537f7, 0xf7f005, 0x0537f7, 0x0537f7, 0x0537f7, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 
0x000000, 0x000000, 0x000000, 0x000000, 0x98620a, 0x98620a, 0x0537f7, 0x0537f7, 0x0537f7, 0x0537f7, 0x0537f7, 0x0537f7, 0x0537f7, 0x0537f7, 0x98620a, 0x98620a, 
0x000000, 0x000000, 0x000000, 0x000000, 0x0537f7, 0x0537f7, 0x0537f7, 0x0537f7, 0x0537f7, 0x0537f7, 0x98620a, 0x98620a, 0x98620a, 0x000000, 0x000000, 0x000000, 
0x000000, 0x000000, 0x000000, 0x98620a, 0x98620a, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 
0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 
0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000

};

void reindeer_() {
  FastLED.clear();
   for(int i = 0; i < NUM_LEDS; i++) {
      leds[i] = pgm_read_dword(&(reindeer1[i]));  // Read array from Flash
      }
  FastLED.show();
  delay(600);

  FastLED.clear();
   for(int i = 0; i < NUM_LEDS; i++) {
      leds[i] = pgm_read_dword(&(reindeer2[i]));  // Read array from Flash
      }
  FastLED.show();
  delay(600);
   }



void mario_() {
  FastLED.clear();
    for(int i = 0; i < NUM_LEDS; i++) {
      leds[i] = pgm_read_dword(&(mario1[i]));  // Read array from Flash
    }

  FastLED.show();
  delay(300);

  FastLED.clear();
    for(int i = 0; i < NUM_LEDS; i++) {
      leds[i] = pgm_read_dword(&(mario2[i]));  // Read array from Flash
    }

  FastLED.show();
  delay(300);
  }


void setup() { 
//FastLED.addLeds<NEOPIXEL,DATA_PIN>(leds, NUM_LEDS);  // Init of the Fastled library
LEDS.addLeds<WS2811,DATA_PIN, GRB>(leds, NUM_LEDS);
FastLED.setBrightness(15);
}

void loop() { 


//for(int passtime = 0; passtime < 8; passtime++) { // Display it 8 times

  for(int rd = 0; rd <4; rd++) {
    reindeer_();
    }

  for(int mario=0; mario <8; mario++) {
    mario_();
  } 
}
